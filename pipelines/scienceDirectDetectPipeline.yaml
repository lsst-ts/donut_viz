# This yaml file is used to define the tasks and configuration of
# a Gen 3 pipeline used for testing in ts_wep.
description: wep basic processing test pipeline
# Here we specify the corresponding instrument for the data we
# will be using.
instrument: lsst.obs.lsst.LsstCam
# Then we can specify each task in our pipeline by a name
# and then specify the class name corresponding to that task
tasks:
  isr:
    class: lsst.ip.isr.IsrTaskLSST
    config:
      # Although we don't have to apply the amp offset corrections, we do want
      # to compute them for analyzeAmpOffsetMetadata to report on as metrics.
      doAmpOffset: true
      ampOffset.doApplyAmpOffset: false
      # Turn off slow steps in ISR
      doBrighterFatter: false
      doCrosstalk: false
      # Turn off flats, biases, darks because we don't have these in test repo
      doBias: False
      doDark: False
      doFlat: False
      doBootstrap: True
      doApplyGains: False
      doLinearize: False
      doDeferredCharge: False
      doDefect: False
  generateDonutCatalogWcsTask:
    class: lsst.ts.wep.task.generateDonutCatalogWcsTask.GenerateDonutCatalogWcsTask
    config:
      donutSelector.unblendedSeparation: 1
  cutOutDonutsScienceSensorTask:
    class: lsst.ts.wep.task.CutOutDonutsScienceSensorTask
  calcZernikesTask:
    class: lsst.ts.wep.task.calcZernikesTask.CalcZernikesTask
    config:
      estimateZernikes.maxNollIndex: 28
      estimateZernikes.saveHistory: False
      estimateZernikes.maskKwargs: {'doMaskBlends': False}
  aggregateZernikeTablesTask:
    class: lsst.donut.viz.AggregateZernikeTablesTask
  aggregateDonutTablesTask:
    class: lsst.donut.viz.AggregateDonutTablesTask
  aggregateDonutStampsTask:
    class: lsst.donut.viz.AggregateDonutStampsTask
  aggregateAOSVisitTableTask:
    class: lsst.donut.viz.AggregateAOSVisitTableTask
  plotAOSTask:
    class: lsst.donut.viz.PlotAOSTask
    config:
      doRubinTVUpload: false
  plotDonutTask:
    class: lsst.donut.viz.PlotDonutTask
    config:
      doRubinTVUpload: false
